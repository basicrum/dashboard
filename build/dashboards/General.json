{
    "annotations": {
        "list": [
            {
                "builtIn": 1,
                "datasource": {
                    "type": "grafana"
                },
                "enable": true,
                "hide": true,
                "iconColor": "rgba(0, 211, 255, 1)",
                "name": "Annotations & Alerts",
                "target": {
                    "limit": 100,
                    "matchAny": false,
                    "tags": [],
                    "type": "dashboard"
                },
                "type": "dashboard"
            }
        ]
    },
    "editable": false,
    "fiscalYearStartMonth": 0,
    "graphTooltip": 0,
    "id": null,
    "links": [],
    "liveNow": false,
    "panels": [
        {
            "collapsed": false,
            "gridPos": {
                "h": 1,
                "w": 24,
                "x": 0,
                "y": 0
            },
            "id": 1,
            "panels": [],
            "title": "Chrome - All pages",
            "type": "row"
        },
        {
            "datasource": {
                "type": "vertamedia-clickhouse-datasource",
                "uid": "BRUMMUCSTARBUCS"
            },
            "gridPos": {
                "h": 8,
                "w": 12,
                "x": 0,
                "y": 1
            },
            "id": 2,
            "options": {
                "data": "",
                "layout": {
                    "barmode": "stack",
                    "legend": {
                        "bgcolor": "#fff",
                        "orientation": "h"
                    },
                    "margin": {
                        "b": 30,
                        "l": 45,
                        "pad": 4,
                        "r": 10,
                        "t": 10
                    },
                    "paper_bgcolor": "rgba(0, 0, 0, 0)",
                    "plot_bgcolor": "rgba(0, 0, 0, 0)",
                    "xaxis": {
                        "autorange": false,
                        "range": [
                            -100,
                            8100
                        ],
                        "tickmode": "array",
                        "ticktext": [
                            "1 sec",
                            "2 sec",
                            "3 sec",
                            "4 sec",
                            "5 sec",
                            "6 sec",
                            "7 sec",
                            "8 sec"
                        ],
                        "tickvals": [
                            1000,
                            2000,
                            3000,
                            4000,
                            5000,
                            6000,
                            7000,
                            8000
                        ]
                    }
                },
                "onclick": "",
                "script": "var xValue = [];\nvar yValue = [];\n\nvar dataFound = true;\n\ntry {\n    var xValue = data.series[0].fields[0].values;\n    var yValue = data.series[0].fields[1].values;\n}\ncatch (e) {\n    dataFound = false\n}\n\nvar trace1 = {};\n\nif (dataFound) {\n    trace1 = {\n        x: xValue,\n        y: yValue,\n        type: 'bar',\n        textposition: 'auto',\n        hoverinfo: 'none',\n        marker: {\n            opacity: 0.6,\n            line: {\n                color: 'rgb(8,48,107)',\n                width: 1.5\n            }\n        }\n    };\n\n    trace1.marker.color = trace1.x.map(function (v) {\n        if (v <= 800) {\n            return '#0cce6a'\n        }\n\n        if (v > 800 && v <= 1800) {\n            return '#ffa400'\n        }\n\n        return '#ff4e43'\n    });\n}\n\nvar layout = {\n    title: ''\n}\n\nif (!dataFound) {\n    // Idea from: https://community.plotly.com/t/replacing-an-empty-graph-with-a-message/31497/2\n    layout['annotations'] = [\n        {\n            \"text\": \"No data\",\n            \"xref\": \"paper\",\n            \"yref\": \"paper\",\n            \"showarrow\": false,\n            \"font\": {\n                \"size\": 28\n            }\n        }\n    ];\n\n    layout['xaxis'] = {\n        \"visible\": false\n    };\n\n    layout['yaxis'] = {\n        \"visible\": false\n    };\n}\n\nreturn { data: [trace1], layout: layout };"
            },
            "targets": [
                {
                    "database": "default",
                    "datasource": {
                        "type": "vertamedia-clickhouse-datasource",
                        "uid": "BRUMMUCSTARBUCS"
                    },
                    "dateColDataType": "",
                    "dateLoading": false,
                    "dateTimeColDataType": "created_at",
                    "dateTimeType": "DATETIME",
                    "datetimeLoading": false,
                    "extrapolate": true,
                    "format": "table",
                    "formattedQuery": "",
                    "intervalFactor": 1,
                    "query": "SELECT\n    intDiv(first_byte_duration, $bucket_size) * $bucket_size as first_byte_duration_value,\n    sum(toUInt64(1)) as count\n\nFROM $table\n\nWHERE\n    $timeFilter\n    AND first_byte_duration > 100\n    AND first_byte_duration < 10000\n    AND event_type = 'visit_page'\n    $conditionalTest(AND hostname in($hostname), $hostname)\n    $conditionalTest(AND device_type in($device_type), $device_type)\n\nGROUP BY first_byte_duration_value\nORDER BY first_byte_duration_value",
                    "rawQuery": "",
                    "refId": "A",
                    "round": "0s",
                    "skip_comments": true,
                    "table": "webperf_rum_events",
                    "tableLoading": false
                }
            ],
            "title": "TTFB",
            "transformations": [],
            "transparent": true,
            "type": "ae3e-plotly-panel"
        },
        {
            "datasource": {
                "type": "vertamedia-clickhouse-datasource",
                "uid": "BRUMMUCSTARBUCS"
            },
            "gridPos": {
                "h": 8,
                "w": 12,
                "x": 12,
                "y": 1
            },
            "id": 3,
            "options": {
                "data": "",
                "layout": {
                    "barmode": "stack",
                    "legend": {
                        "bgcolor": "#fff",
                        "orientation": "h"
                    },
                    "margin": {
                        "b": 30,
                        "l": 45,
                        "pad": 4,
                        "r": 10,
                        "t": 10
                    },
                    "paper_bgcolor": "rgba(0, 0, 0, 0)",
                    "plot_bgcolor": "rgba(0, 0, 0, 0)",
                    "xaxis": {
                        "autorange": false,
                        "range": [
                            -100,
                            8100
                        ],
                        "tickmode": "array",
                        "ticktext": [
                            "1 sec",
                            "2 sec",
                            "3 sec",
                            "4 sec",
                            "5 sec",
                            "6 sec",
                            "7 sec",
                            "8 sec"
                        ],
                        "tickvals": [
                            1000,
                            2000,
                            3000,
                            4000,
                            5000,
                            6000,
                            7000,
                            8000
                        ]
                    }
                },
                "onclick": "",
                "script": "var xValue = [];\nvar yValue = [];\n\nvar dataFound = true;\n\ntry {\n    var xValue = data.series[0].fields[0].values;\n    var yValue = data.series[0].fields[1].values;\n}\ncatch (e) {\n    dataFound = false\n}\n\nvar trace1 = {};\n\nif (dataFound) {\n    trace1 = {\n        x: xValue,\n        y: yValue,\n        type: 'bar',\n        textposition: 'auto',\n        hoverinfo: 'none',\n        marker: {\n            opacity: 0.6,\n            line: {\n                color: 'rgb(8,48,107)',\n                width: 1.5\n            }\n        }\n    };\n\n    trace1.marker.color = trace1.x.map(function (v) {\n        if (v <= 1800) {\n            return '#0cce6a'\n        }\n\n        if (v > 1800 && v <= 3000) {\n            return '#ffa400'\n        }\n\n        return '#ff4e43'\n    });\n}\n\nvar layout = {\n    title: ''\n}\n\nif (!dataFound) {\n    // Idea from: https://community.plotly.com/t/replacing-an-empty-graph-with-a-message/31497/2\n    layout['annotations'] = [\n        {\n            \"text\": \"No data\",\n            \"xref\": \"paper\",\n            \"yref\": \"paper\",\n            \"showarrow\": false,\n            \"font\": {\n                \"size\": 28\n            }\n        }\n    ];\n\n    layout['xaxis'] = {\n        \"visible\": false\n    };\n\n    layout['yaxis'] = {\n        \"visible\": false\n    };\n}\n\nreturn { data: [trace1], layout: layout };"
            },
            "targets": [
                {
                    "database": "default",
                    "datasource": {
                        "type": "vertamedia-clickhouse-datasource",
                        "uid": "BRUMMUCSTARBUCS"
                    },
                    "dateColDataType": "",
                    "dateLoading": false,
                    "dateTimeColDataType": "created_at",
                    "dateTimeType": "DATETIME",
                    "datetimeLoading": false,
                    "extrapolate": true,
                    "format": "table",
                    "formattedQuery": "",
                    "intervalFactor": 1,
                    "query": "SELECT\n    intDiv(first_contentful_paint, $bucket_size) * $bucket_size as first_contentful_paint_value,\n    sum(toUInt64(1)) as count\n    \nFROM $table\n\nWHERE\n    $timeFilter\n    AND first_contentful_paint_value > 100\n    AND first_contentful_paint_value < 10000\n    AND event_type = 'visit_page'\n    and browser_name = 'Chrome'\n    $conditionalTest(AND hostname in($hostname), $hostname)\n    $conditionalTest(AND device_type in($device_type), $device_type)\n\nGROUP BY first_contentful_paint_value\nORDER BY first_contentful_paint_value",
                    "rawQuery": "",
                    "refId": "A",
                    "round": "0s",
                    "skip_comments": true,
                    "table": "webperf_rum_events",
                    "tableLoading": false
                }
            ],
            "title": "FCP",
            "transformations": [],
            "transparent": true,
            "type": "ae3e-plotly-panel"
        },
        {
            "datasource": {
                "type": "vertamedia-clickhouse-datasource",
                "uid": "BRUMMUCSTARBUCS"
            },
            "gridPos": {
                "h": 8,
                "w": 12,
                "x": 0,
                "y": 9
            },
            "id": 4,
            "options": {
                "data": "",
                "layout": {
                    "barmode": "stack",
                    "legend": {
                        "bgcolor": "#fff",
                        "orientation": "h"
                    },
                    "margin": {
                        "b": 30,
                        "l": 45,
                        "pad": 4,
                        "r": 10,
                        "t": 10
                    },
                    "paper_bgcolor": "rgba(0, 0, 0, 0)",
                    "plot_bgcolor": "rgba(0, 0, 0, 0)",
                    "xaxis": {
                        "autorange": false,
                        "range": [
                            -100,
                            8100
                        ],
                        "tickmode": "array",
                        "ticktext": [
                            "1 sec",
                            "2 sec",
                            "3 sec",
                            "4 sec",
                            "5 sec",
                            "6 sec",
                            "7 sec",
                            "8 sec"
                        ],
                        "tickvals": [
                            1000,
                            2000,
                            3000,
                            4000,
                            5000,
                            6000,
                            7000,
                            8000
                        ]
                    }
                },
                "onclick": "",
                "script": "var xValue = [];\nvar yValue = [];\n\nvar dataFound = true;\n\ntry {\n    var xValue = data.series[0].fields[0].values;\n    var yValue = data.series[0].fields[1].values;\n}\ncatch (e) {\n    dataFound = false\n}\n\nvar trace1 = {};\n\nif (dataFound) {\n    trace1 = {\n        x: xValue,\n        y: yValue,\n        type: 'bar',\n        textposition: 'auto',\n        hoverinfo: 'none',\n        marker: {\n            opacity: 0.6,\n            line: {\n                color: 'rgb(8,48,107)',\n                width: 1.5\n            }\n        }\n    };\n\n    trace1.marker.color = trace1.x.map(function (v) {\n        if (v <= 2500) {\n            return '#0cce6a'\n        }\n\n        if (v > 2500 && v <= 4000) {\n            return '#ffa400'\n        }\n\n        return '#ff4e43'\n    });\n}\n\nvar layout = {\n    title: ''\n}\n\nif (!dataFound) {\n    // Idea from: https://community.plotly.com/t/replacing-an-empty-graph-with-a-message/31497/2\n    layout['annotations'] = [\n        {\n            \"text\": \"No data\",\n            \"xref\": \"paper\",\n            \"yref\": \"paper\",\n            \"showarrow\": false,\n            \"font\": {\n                \"size\": 28\n            }\n        }\n    ];\n\n    layout['xaxis'] = {\n        \"visible\": false\n    };\n\n    layout['yaxis'] = {\n        \"visible\": false\n    };\n}\n\nreturn { data: [trace1], layout: layout };"
            },
            "targets": [
                {
                    "database": "default",
                    "datasource": {
                        "type": "vertamedia-clickhouse-datasource",
                        "uid": "BRUMMUCSTARBUCS"
                    },
                    "dateColDataType": "",
                    "dateLoading": false,
                    "dateTimeColDataType": "created_at",
                    "dateTimeType": "DATETIME",
                    "datetimeLoading": false,
                    "extrapolate": true,
                    "format": "table",
                    "formattedQuery": "",
                    "intervalFactor": 1,
                    "query": "SELECT\n    intDiv(largest_contentful_paint, $bucket_size) * $bucket_size as largest_contentful_paint_value,\n    sum(toUInt64(1)) as count\n\nFROM $table\n\nWHERE\n    $timeFilter\n    AND largest_contentful_paint > 100\n    AND largest_contentful_paint < 10000\n    AND event_type = 'visit_page'\n    $conditionalTest(AND hostname in($hostname), $hostname)\n    $conditionalTest(AND device_type in($device_type), $device_type)\n\nGROUP BY largest_contentful_paint_value\nORDER BY largest_contentful_paint_value",
                    "rawQuery": "",
                    "refId": "A",
                    "round": "0s",
                    "skip_comments": true,
                    "table": "webperf_rum_events",
                    "tableLoading": false
                }
            ],
            "title": "LCP",
            "transformations": [],
            "transparent": true,
            "type": "ae3e-plotly-panel"
        },
        {
            "datasource": {
                "type": "vertamedia-clickhouse-datasource",
                "uid": "BRUMMUCSTARBUCS"
            },
            "gridPos": {
                "h": 8,
                "w": 12,
                "x": 12,
                "y": 9
            },
            "id": 5,
            "options": {
                "data": "",
                "layout": {
                    "barmode": "stack",
                    "legend": {
                        "bgcolor": "#fff",
                        "orientation": "h"
                    },
                    "margin": {
                        "b": 30,
                        "l": 45,
                        "pad": 4,
                        "r": 10,
                        "t": 10
                    },
                    "paper_bgcolor": "rgba(0, 0, 0, 0)",
                    "plot_bgcolor": "rgba(0, 0, 0, 0)",
                    "xaxis": {
                        "autorange": false,
                        "range": [
                            -0.01,
                            1
                        ],
                        "tickmode": "array",
                        "ticktext": [
                            "0.1",
                            "0.2",
                            "0.3",
                            "0.4",
                            "0.5",
                            "0.6",
                            "0.7",
                            "0.8",
                            "0.9",
                            "1.0"
                        ],
                        "tickvals": [
                            0.1,
                            0.2,
                            0.3,
                            0.4,
                            0.5,
                            0.6,
                            0.7,
                            0.8,
                            0.9,
                            1
                        ]
                    }
                },
                "onclick": "",
                "script": "var xValue = [];\nvar yValue = [];\n\nvar dataFound = true;\n\ntry {\n    var xValue = data.series[0].fields[0].values;\n    var yValue = data.series[0].fields[1].values;\n}\ncatch (e) {\n    dataFound = false\n}\n\nvar trace1 = {};\n\nif (dataFound) {\n    trace1 = {\n        x: xValue,\n        y: yValue,\n        type: 'bar',\n        textposition: 'auto',\n        hoverinfo: 'none',\n        marker: {\n            opacity: 0.6,\n            line: {\n                color: 'rgb(8,48,107)',\n                width: 1.5\n            }\n        }\n    };\n\n    trace1.marker.color = trace1.x.map(function (v) {\n        if (v <= 0.1) {\n            return '#0cce6a'\n        }\n\n        if (v > 0.1 && v <= 0.25) {\n            return '#ffa400'\n        }\n\n        return '#ff4e43'\n    });\n}\n\nvar layout = {\n    title: ''\n}\n\nif (!dataFound) {\n    // Idea from: https://community.plotly.com/t/replacing-an-empty-graph-with-a-message/31497/2\n    layout['annotations'] = [\n        {\n            \"text\": \"No data\",\n            \"xref\": \"paper\",\n            \"yref\": \"paper\",\n            \"showarrow\": false,\n            \"font\": {\n                \"size\": 28\n            }\n        }\n    ];\n\n    layout['xaxis'] = {\n        \"visible\": false\n    };\n\n    layout['yaxis'] = {\n        \"visible\": false\n    };\n}\n\nreturn { data: [trace1], layout: layout };"
            },
            "targets": [
                {
                    "database": "default",
                    "datasource": {
                        "type": "vertamedia-clickhouse-datasource",
                        "uid": "BRUMMUCSTARBUCS"
                    },
                    "dateColDataType": "",
                    "dateLoading": false,
                    "dateTimeColDataType": "created_at",
                    "dateTimeType": "DATETIME",
                    "datetimeLoading": false,
                    "extrapolate": true,
                    "format": "table",
                    "formattedQuery": "",
                    "intervalFactor": 1,
                    "query": "SELECT\n    intDiv(cumulative_layout_shift, 0.01) * 0.01 as cumulative_layout_shift_value,\n    sum(toUInt32(1)) as count\n    \nFROM $table\n\nWHERE\n    $timeFilter\n    AND event_type = 'visit_page'\n    AND cumulative_layout_shift IS NOT NULL\n    $conditionalTest(AND hostname in($hostname), $hostname)\n    $conditionalTest(AND device_type in($device_type), $device_type)\n\nGROUP BY cumulative_layout_shift_value\nORDER BY cumulative_layout_shift_value",
                    "rawQuery": "",
                    "refId": "A",
                    "round": "0s",
                    "skip_comments": true,
                    "table": "webperf_rum_events",
                    "tableLoading": false
                }
            ],
            "title": "CLS",
            "transformations": [],
            "transparent": true,
            "type": "ae3e-plotly-panel"
        }
    ],
    "refresh": false,
    "schemaVersion": 36,
    "style": "dark",
    "tags": [],
    "templating": {
        "list": [
            {
                "allValue": "",
                "current": {
                    "selected": true,
                    "text": [
                        "example1.com"
                    ],
                    "value": [
                        "example1.com"
                    ]
                },
                "hide": 1,
                "includeAll": true,
                "label": "Hostname",
                "multi": true,
                "name": "hostname",
                "options": [
                    {
                        "selected": false,
                        "text": "All",
                        "value": "$__all"
                    },
                    {
                        "selected": false,
                        "text": "example1.com",
                        "value": "example1.com"
                    },
                    {
                        "selected": false,
                        "text": "example2.com",
                        "value": "example2.com"
                    }
                ],
                "query": "example1.com : example1.com, example2.com : example2.com",
                "queryValue": "",
                "skipUrlSync": false,
                "type": "custom"
            },
            {
                "current": {
                    "selected": true,
                    "text": "100",
                    "value": "100"
                },
                "hide": 1,
                "includeAll": false,
                "label": "Bucket",
                "multi": false,
                "name": "bucket_size",
                "options": [
                    {
                        "selected": false,
                        "text": "50",
                        "value": "50"
                    },
                    {
                        "selected": true,
                        "text": "100",
                        "value": "100"
                    },
                    {
                        "selected": false,
                        "text": "150",
                        "value": "150"
                    },
                    {
                        "selected": false,
                        "text": "200",
                        "value": "200"
                    },
                    {
                        "selected": false,
                        "text": "250",
                        "value": "250"
                    }
                ],
                "query": "50 : 50, 100 : 100, 150 : 150, 200 : 200, 250 : 250",
                "queryValue": "",
                "skipUrlSync": false,
                "type": "custom"
            },
            {
                "allValue": "'mobile', 'desktop', 'tablet', 'bot'",
                "current": {
                    "selected": true,
                    "text": [
                        "All"
                    ],
                    "value": [
                        "$__all"
                    ]
                },
                "hide": 1,
                "includeAll": true,
                "label": "Device",
                "multi": true,
                "name": "device_type",
                "options": [
                    {
                        "selected": true,
                        "text": "All",
                        "value": "$__all"
                    },
                    {
                        "selected": false,
                        "text": "Mobile",
                        "value": "mobile"
                    },
                    {
                        "selected": false,
                        "text": "Desktop",
                        "value": "desktop"
                    },
                    {
                        "selected": false,
                        "text": "Tablet",
                        "value": "tablet"
                    },
                    {
                        "selected": false,
                        "text": "Bot",
                        "value": "bot"
                    }
                ],
                "query": "Mobile : mobile, Desktop : desktop, Tablet : tablet, Bot : bot",
                "queryValue": "",
                "skipUrlSync": false,
                "type": "custom"
            }
        ]
    },
    "time": {
        "from": "now-1y",
        "to": "now"
    },
    "timepicker": {},
    "timezone": "",
    "title": "Core Web Vitals +",
    "uid": "basicrum-general",
    "version": 0,
    "weekStart": ""
}