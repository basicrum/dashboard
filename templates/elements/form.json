{
    "datasource": {
        "type": "vertamedia-clickhouse-datasource",
        "uid": "{{PLACEHOLDER}}"
    },
    "description": "",
    "gridPos": {
        "h": 0,
        "w": 0,
        "x": 0,
        "y": 0
    },
    "id": "{{PLACEHOLDER}}",
    "options": {
        "buttonGroup": {
            "orientation": "center",
            "size": "md"
        },
        "elements": [],
        "initial": {
            "code": "console.log(data, response, initial, elements);\n\nreturn;\n\n/**\n * Data Source\n * Requires form elements to be defined\n */\nconst dataQuery = toDataQueryResponse(response);\nconsole.log(dataQuery);",
            "contentType": "application/json",
            "getPayload": "return {\n  rawSql: '',\n  format: 'table',\n}",
            "highlight": false,
            "highlightColor": "red",
            "method": "-"
        },
        "layout": {},
        "reset": {
            "backgroundColor": "purple",
            "foregroundColor": "yellow",
            "icon": "process",
            "text": "Reset",
            "variant": "hidden"
        },
        "resetAction": {
            "code": "console.log(data, response, initial, elements);",
            "mode": "initial"
        },
        "saveDefault": {
            "icon": "save",
            "text": "Save Default",
            "variant": "hidden"
        },
        "submit": {
            "backgroundColor": "purple",
            "foregroundColor": "yellow",
            "icon": "cloud-upload",
            "text": "$$submit_text",
            "variant": "primary"
        },
        "update": {
            "code": "if (response && response.ok) {\n  notifySuccess(['Submit', 'Form was submitted successfully.']);\n  locationService.reload();\n} else {\n  notifyError(['Submit', 'An error occurred during form submission.']);\n}",
            "confirm": true,
            "contentType": "application/json",
            "getPayload": "const payload = {};\n\nelements.forEach((element) => {\n  if (!element.value) {\n    return;\n  }\n\n  payload[element.id] = element.value;\n})\n\nreturn payload;\n\n/**\n * Data Source payload\n */ \nreturn {\n  rawSql: '',\n  format: 'table',\n};",
            "method": "$$method",
            "payloadMode": "all",
            "url": "/api/datasources/proxy/2/basicrum/$$relative_url"
        }
    },
    "targets": [
        {
            "datasource": {
                "type": "vertamedia-clickhouse-datasource",
                "uid": "{{PLACEHOLDER}}"
            },
            "dateTimeType": "DATETIME",
            "extrapolate": true,
            "format": "time_series",
            "formattedQuery": "",
            "intervalFactor": 1,
            "query": "select 1",
            "rawQuery": "",
            "refId": "A",
            "round": "0s",
            "skip_comments": true
        }
    ],
    "title": "{{PLACEHOLDER}}",
    "type": "volkovlabs-form-panel"
}
